/*
 * SaaSus Auth API Schema
 *
 * Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = authapi.Client.OpenAPIDateConverter;

namespace authapi.Model
{
    /// <summary>
    /// CloudFormationLaunchStackLink
    /// </summary>
    [DataContract(Name = "CloudFormationLaunchStackLink")]
    public partial class CloudFormationLaunchStackLink : IEquatable<CloudFormationLaunchStackLink>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CloudFormationLaunchStackLink" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CloudFormationLaunchStackLink() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CloudFormationLaunchStackLink" /> class.
        /// </summary>
        /// <param name="link">link (required).</param>
        public CloudFormationLaunchStackLink(string link = default(string))
        {
            // to ensure "link" is required (not null)
            if (link == null)
            {
                throw new ArgumentNullException("link is a required property for CloudFormationLaunchStackLink and cannot be null");
            }
            this.Link = link;
        }

        /// <summary>
        /// Gets or Sets Link
        /// </summary>
        /// <example>https://us-west-2.console.aws.amazon.com/cloudformation/home?region&#x3D;us-west-2#/stacks/create?stackName&#x3D;sample&amp;templateURL&#x3D;https://s3.us-west-2.amazonaws.com/cloudformation-templates-sample.template</example>
        [DataMember(Name = "link", IsRequired = true, EmitDefaultValue = true)]
        public string Link { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CloudFormationLaunchStackLink {\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CloudFormationLaunchStackLink);
        }

        /// <summary>
        /// Returns true if CloudFormationLaunchStackLink instances are equal
        /// </summary>
        /// <param name="input">Instance of CloudFormationLaunchStackLink to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CloudFormationLaunchStackLink input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Link == input.Link ||
                    (this.Link != null &&
                    this.Link.Equals(input.Link))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Link != null)
                {
                    hashCode = (hashCode * 59) + this.Link.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

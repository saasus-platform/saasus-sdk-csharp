/*
 * SaaSus Auth API Schema
 *
 * Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = authapi.Client.OpenAPIDateConverter;

namespace authapi.Model
{
    /// <summary>
    /// UpdateSingleTenantSettingsParam
    /// </summary>
    [DataContract(Name = "UpdateSingleTenantSettingsParam")]
    public partial class UpdateSingleTenantSettingsParam : IEquatable<UpdateSingleTenantSettingsParam>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateSingleTenantSettingsParam" /> class.
        /// </summary>
        /// <param name="enabled">enable Single Tenant settings or not.</param>
        /// <param name="roleArn">ARN of the role for SaaS Platform to AssumeRole.</param>
        /// <param name="cloudformationTemplate">CloudFormation template file.</param>
        /// <param name="ddlTemplate">ddl file to run in SaaS environment.</param>
        /// <param name="roleExternalId">External id used by SaaSus when AssumeRole to operate SaaS.</param>
        public UpdateSingleTenantSettingsParam(bool enabled = default(bool), string roleArn = default(string), string cloudformationTemplate = default(string), string ddlTemplate = default(string), string roleExternalId = default(string))
        {
            this.Enabled = enabled;
            this.RoleArn = roleArn;
            this.CloudformationTemplate = cloudformationTemplate;
            this.DdlTemplate = ddlTemplate;
            this.RoleExternalId = roleExternalId;
        }

        /// <summary>
        /// enable Single Tenant settings or not
        /// </summary>
        /// <value>enable Single Tenant settings or not</value>
        [DataMember(Name = "enabled", EmitDefaultValue = true)]
        public bool Enabled { get; set; }

        /// <summary>
        /// ARN of the role for SaaS Platform to AssumeRole
        /// </summary>
        /// <value>ARN of the role for SaaS Platform to AssumeRole</value>
        /// <example>arn:aws:iam::123456789012:role/role-name</example>
        [DataMember(Name = "role_arn", EmitDefaultValue = false)]
        public string RoleArn { get; set; }

        /// <summary>
        /// CloudFormation template file
        /// </summary>
        /// <value>CloudFormation template file</value>
        /// <example>U3dhZ2dlciByb2Nrcw&#x3D;&#x3D;</example>
        [DataMember(Name = "cloudformation_template", EmitDefaultValue = false)]
        public string CloudformationTemplate { get; set; }

        /// <summary>
        /// ddl file to run in SaaS environment
        /// </summary>
        /// <value>ddl file to run in SaaS environment</value>
        /// <example>U3dhZ2dlciByb2Nrcw&#x3D;&#x3D;</example>
        [DataMember(Name = "ddl_template", EmitDefaultValue = false)]
        public string DdlTemplate { get; set; }

        /// <summary>
        /// External id used by SaaSus when AssumeRole to operate SaaS
        /// </summary>
        /// <value>External id used by SaaSus when AssumeRole to operate SaaS</value>
        /// <example>1234567890</example>
        [DataMember(Name = "role_external_id", EmitDefaultValue = false)]
        public string RoleExternalId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateSingleTenantSettingsParam {\n");
            sb.Append("  Enabled: ").Append(Enabled).Append("\n");
            sb.Append("  RoleArn: ").Append(RoleArn).Append("\n");
            sb.Append("  CloudformationTemplate: ").Append(CloudformationTemplate).Append("\n");
            sb.Append("  DdlTemplate: ").Append(DdlTemplate).Append("\n");
            sb.Append("  RoleExternalId: ").Append(RoleExternalId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UpdateSingleTenantSettingsParam);
        }

        /// <summary>
        /// Returns true if UpdateSingleTenantSettingsParam instances are equal
        /// </summary>
        /// <param name="input">Instance of UpdateSingleTenantSettingsParam to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UpdateSingleTenantSettingsParam input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Enabled == input.Enabled ||
                    this.Enabled.Equals(input.Enabled)
                ) && 
                (
                    this.RoleArn == input.RoleArn ||
                    (this.RoleArn != null &&
                    this.RoleArn.Equals(input.RoleArn))
                ) && 
                (
                    this.CloudformationTemplate == input.CloudformationTemplate ||
                    (this.CloudformationTemplate != null &&
                    this.CloudformationTemplate.Equals(input.CloudformationTemplate))
                ) && 
                (
                    this.DdlTemplate == input.DdlTemplate ||
                    (this.DdlTemplate != null &&
                    this.DdlTemplate.Equals(input.DdlTemplate))
                ) && 
                (
                    this.RoleExternalId == input.RoleExternalId ||
                    (this.RoleExternalId != null &&
                    this.RoleExternalId.Equals(input.RoleExternalId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Enabled.GetHashCode();
                if (this.RoleArn != null)
                {
                    hashCode = (hashCode * 59) + this.RoleArn.GetHashCode();
                }
                if (this.CloudformationTemplate != null)
                {
                    hashCode = (hashCode * 59) + this.CloudformationTemplate.GetHashCode();
                }
                if (this.DdlTemplate != null)
                {
                    hashCode = (hashCode * 59) + this.DdlTemplate.GetHashCode();
                }
                if (this.RoleExternalId != null)
                {
                    hashCode = (hashCode * 59) + this.RoleExternalId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

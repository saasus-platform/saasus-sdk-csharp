/*
 * SaaSus AWS Marketplace API Schema
 *
 * SaaSus AWS Marketplace API Schema
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = awsmarketplaceapi.Client.OpenAPIDateConverter;

namespace awsmarketplaceapi.Model
{
    /// <summary>
    /// Customer
    /// </summary>
    [DataContract(Name = "Customer")]
    public partial class Customer : IEquatable<Customer>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Customer" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Customer() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Customer" /> class.
        /// </summary>
        /// <param name="customerIdentifier">customerIdentifier (required).</param>
        /// <param name="customerAwsAccountId">customerAwsAccountId (required).</param>
        /// <param name="tenantId">tenantId (required).</param>
        public Customer(string customerIdentifier = default(string), string customerAwsAccountId = default(string), string tenantId = default(string))
        {
            // to ensure "customerIdentifier" is required (not null)
            if (customerIdentifier == null)
            {
                throw new ArgumentNullException("customerIdentifier is a required property for Customer and cannot be null");
            }
            this.CustomerIdentifier = customerIdentifier;
            // to ensure "customerAwsAccountId" is required (not null)
            if (customerAwsAccountId == null)
            {
                throw new ArgumentNullException("customerAwsAccountId is a required property for Customer and cannot be null");
            }
            this.CustomerAwsAccountId = customerAwsAccountId;
            // to ensure "tenantId" is required (not null)
            if (tenantId == null)
            {
                throw new ArgumentNullException("tenantId is a required property for Customer and cannot be null");
            }
            this.TenantId = tenantId;
        }

        /// <summary>
        /// Gets or Sets CustomerIdentifier
        /// </summary>
        /// <example>123456789012</example>
        [DataMember(Name = "customer_identifier", IsRequired = true, EmitDefaultValue = true)]
        public string CustomerIdentifier { get; set; }

        /// <summary>
        /// Gets or Sets CustomerAwsAccountId
        /// </summary>
        /// <example>123456789012</example>
        [DataMember(Name = "customer_aws_account_id", IsRequired = true, EmitDefaultValue = true)]
        public string CustomerAwsAccountId { get; set; }

        /// <summary>
        /// Gets or Sets TenantId
        /// </summary>
        /// <example>69e732d6-8ecc-45c4-c2eb-8438f7ffe775</example>
        [DataMember(Name = "tenant_id", IsRequired = true, EmitDefaultValue = true)]
        public string TenantId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Customer {\n");
            sb.Append("  CustomerIdentifier: ").Append(CustomerIdentifier).Append("\n");
            sb.Append("  CustomerAwsAccountId: ").Append(CustomerAwsAccountId).Append("\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Customer);
        }

        /// <summary>
        /// Returns true if Customer instances are equal
        /// </summary>
        /// <param name="input">Instance of Customer to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Customer input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CustomerIdentifier == input.CustomerIdentifier ||
                    (this.CustomerIdentifier != null &&
                    this.CustomerIdentifier.Equals(input.CustomerIdentifier))
                ) && 
                (
                    this.CustomerAwsAccountId == input.CustomerAwsAccountId ||
                    (this.CustomerAwsAccountId != null &&
                    this.CustomerAwsAccountId.Equals(input.CustomerAwsAccountId))
                ) && 
                (
                    this.TenantId == input.TenantId ||
                    (this.TenantId != null &&
                    this.TenantId.Equals(input.TenantId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CustomerIdentifier != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerIdentifier.GetHashCode();
                }
                if (this.CustomerAwsAccountId != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerAwsAccountId.GetHashCode();
                }
                if (this.TenantId != null)
                {
                    hashCode = (hashCode * 59) + this.TenantId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
